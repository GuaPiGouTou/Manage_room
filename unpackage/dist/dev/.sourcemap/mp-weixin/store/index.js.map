{"version":3,"file":"index.js","sources":["store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nconst store = createStore({\n\n  state: {\n    // 房源基本信息\n    baseInfo: {\n      locationName: 'NULL',\n      longitude: 0,\n      latitude: 0,\n      wechat: '',\n      phone: '',\n      title: '',\n      location: '',\n      area: '',\n      count: 10\n    },\n    // 房间信息数组\n    rooms: [],\n    // 当前编辑的房间索引\n    currentRoomIndex: 0\n  },\n  mutations: {\n    // 更新基本信息\n    UPDATE_BASE_INFO(state, payload) {\n      state.baseInfo = { ...state.baseInfo, ...payload }\n      // 同步到本地存储\n      uni.setStorageSync('baseInfo', state.baseInfo)\n    },\n    \n    // 初始化房间数据\n    INIT_ROOMS(state, count) {\n      const newRooms = []\n      for (let i = 0; i < count; i++) {\n        // 如果已有数据，保留原有数据\n        if (state.rooms[i]) {\n          newRooms.push(state.rooms[i])\n        } else {\n          newRooms.push({\n            roomNumber: '',\n            roomType: '',\n            videos: [],\n            thumbnail: null,\n            facilities: [],\n            paymentOptions: {\n              monthly: '',\n              quarterly: '',\n              yearly: ''\n            }\n          })\n        }\n      }\n      state.rooms = newRooms\n      // 同步到本地存储\n      uni.setStorageSync('rooms', state.rooms)\n    },\n    \n    // 更新房间信息\n    UPDATE_ROOM(state, { index, data }) {\n      Vue.set(state.rooms, index, { ...state.rooms[index], ...data })\n      // 同步到本地存储\n      uni.setStorageSync('rooms', state.rooms)\n    },\n    \n    // 设置当前房间索引\n    SET_CURRENT_ROOM_INDEX(state, index) {\n      state.currentRoomIndex = index\n    },\n    \n    // 从本地存储加载数据\n    LOAD_FROM_STORAGE(state) {\n      const baseInfo = uni.getStorageSync('baseInfo')\n      if (baseInfo) {\n        state.baseInfo = baseInfo\n      }\n      \n      const rooms = uni.getStorageSync('rooms')\n      if (rooms) {\n        state.rooms = rooms\n      }\n    },\n    \n    // 清空所有数据\n    CLEAR_ALL_DATA(state) {\n      state.baseInfo = {\n        locationName: '',\n        longitude: 0,\n        latitude: 0,\n        wechat: '',\n        phone: '',\n        title: '',\n        location: '',\n        area: '',\n        count: 0\n      }\n      state.rooms = []\n      state.currentRoomIndex = 0\n      \n      uni.removeStorageSync('baseInfo')\n      uni.removeStorageSync('rooms')\n    }\n  },\n  actions: {\n    // 初始化房间\n    initRooms({ commit, state }) {\n      commit('INIT_ROOMS', state.baseInfo.count)\n    },\n    \n    // 保存基本信息\n    saveBaseInfo({ commit }, data) {\n      commit('UPDATE_BASE_INFO', data)\n    },\n    \n    // 保存房间信息\n    saveRoomInfo({ commit }, { index, data }) {\n      commit('UPDATE_ROOM', { index, data })\n    },\n    \n    // 加载存储数据\n    loadStorageData({ commit }) {\n      commit('LOAD_FROM_STORAGE')\n    },\n    \n    // 清空数据\n    clearData({ commit }) {\n      commit('CLEAR_ALL_DATA')\n    }\n  },\n  getters: {\n    // 获取当前房间信息\n    currentRoom: (state) => {\n      return state.rooms[state.currentRoomIndex] || {}\n    },\n    \n    // 获取所有房间信息\n    allRooms: (state) => {\n      return state.rooms\n    },\n    \n    // 获取基本信息\n    baseInfo: (state) => {\n      return state.baseInfo\n    },\n    \n    // 检查是否所有房间都已填写\n    isAllRoomsCompleted: (state) => {\n      return state.rooms.every(room => \n        room.roomNumber && room.roomType && room.videos.length > 0\n      )\n    }\n  }\n})\r\n\r\nexport default store\n\r\n"],"names":["createStore","uni"],"mappings":";;AACK,MAAC,QAAQA,cAAAA,YAAY;AAAA,EAExB,OAAO;AAAA;AAAA,IAEL,UAAU;AAAA,MACR,cAAc;AAAA,MACd,WAAW;AAAA,MACX,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,IACR;AAAA;AAAA,IAED,OAAO,CAAE;AAAA;AAAA,IAET,kBAAkB;AAAA,EACnB;AAAA,EACD,WAAW;AAAA;AAAA,IAET,iBAAiB,OAAO,SAAS;AAC/B,YAAM,WAAW,EAAE,GAAG,MAAM,UAAU,GAAG,QAAS;AAElDC,oBAAAA,MAAI,eAAe,YAAY,MAAM,QAAQ;AAAA,IAC9C;AAAA;AAAA,IAGD,WAAW,OAAO,OAAO;AACvB,YAAM,WAAW,CAAE;AACnB,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAE9B,YAAI,MAAM,MAAM,CAAC,GAAG;AAClB,mBAAS,KAAK,MAAM,MAAM,CAAC,CAAC;AAAA,QACtC,OAAe;AACL,mBAAS,KAAK;AAAA,YACZ,YAAY;AAAA,YACZ,UAAU;AAAA,YACV,QAAQ,CAAE;AAAA,YACV,WAAW;AAAA,YACX,YAAY,CAAE;AAAA,YACd,gBAAgB;AAAA,cACd,SAAS;AAAA,cACT,WAAW;AAAA,cACX,QAAQ;AAAA,YACT;AAAA,UACb,CAAW;AAAA,QACF;AAAA,MACF;AACD,YAAM,QAAQ;AAEdA,oBAAAA,MAAI,eAAe,SAAS,MAAM,KAAK;AAAA,IACxC;AAAA;AAAA,IAGD,YAAY,OAAO,EAAE,OAAO,KAAI,GAAI;AAClC,UAAI,IAAI,MAAM,OAAO,OAAO,EAAE,GAAG,MAAM,MAAM,KAAK,GAAG,GAAG,KAAI,CAAE;AAE9DA,oBAAAA,MAAI,eAAe,SAAS,MAAM,KAAK;AAAA,IACxC;AAAA;AAAA,IAGD,uBAAuB,OAAO,OAAO;AACnC,YAAM,mBAAmB;AAAA,IAC1B;AAAA;AAAA,IAGD,kBAAkB,OAAO;AACvB,YAAM,WAAWA,cAAAA,MAAI,eAAe,UAAU;AAC9C,UAAI,UAAU;AACZ,cAAM,WAAW;AAAA,MAClB;AAED,YAAM,QAAQA,cAAAA,MAAI,eAAe,OAAO;AACxC,UAAI,OAAO;AACT,cAAM,QAAQ;AAAA,MACf;AAAA,IACF;AAAA;AAAA,IAGD,eAAe,OAAO;AACpB,YAAM,WAAW;AAAA,QACf,cAAc;AAAA,QACd,WAAW;AAAA,QACX,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AACD,YAAM,QAAQ,CAAE;AAChB,YAAM,mBAAmB;AAEzBA,oBAAG,MAAC,kBAAkB,UAAU;AAChCA,oBAAG,MAAC,kBAAkB,OAAO;AAAA,IAC9B;AAAA,EACF;AAAA,EACD,SAAS;AAAA;AAAA,IAEP,UAAU,EAAE,QAAQ,SAAS;AAC3B,aAAO,cAAc,MAAM,SAAS,KAAK;AAAA,IAC1C;AAAA;AAAA,IAGD,aAAa,EAAE,OAAQ,GAAE,MAAM;AAC7B,aAAO,oBAAoB,IAAI;AAAA,IAChC;AAAA;AAAA,IAGD,aAAa,EAAE,OAAM,GAAI,EAAE,OAAO,KAAI,GAAI;AACxC,aAAO,eAAe,EAAE,OAAO,KAAI,CAAE;AAAA,IACtC;AAAA;AAAA,IAGD,gBAAgB,EAAE,UAAU;AAC1B,aAAO,mBAAmB;AAAA,IAC3B;AAAA;AAAA,IAGD,UAAU,EAAE,UAAU;AACpB,aAAO,gBAAgB;AAAA,IACxB;AAAA,EACF;AAAA,EACD,SAAS;AAAA;AAAA,IAEP,aAAa,CAAC,UAAU;AACtB,aAAO,MAAM,MAAM,MAAM,gBAAgB,KAAK,CAAE;AAAA,IACjD;AAAA;AAAA,IAGD,UAAU,CAAC,UAAU;AACnB,aAAO,MAAM;AAAA,IACd;AAAA;AAAA,IAGD,UAAU,CAAC,UAAU;AACnB,aAAO,MAAM;AAAA,IACd;AAAA;AAAA,IAGD,qBAAqB,CAAC,UAAU;AAC9B,aAAO,MAAM,MAAM;AAAA,QAAM,UACvB,KAAK,cAAc,KAAK,YAAY,KAAK,OAAO,SAAS;AAAA,MAC1D;AAAA,IACF;AAAA,EACF;AACH,CAAC;;"}